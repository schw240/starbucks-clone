/* COMMON */
body {
	color: #333;
	font-size: 16px;
	font-weight: 400;
	line-height: 1.4;
	font-family: 'Nanum Gothic', sans-serif;
	height: 3000px;
}
img {
	/* 밑에 여백이 조금 생기는것을 없애주기 위해 블록요소로 바꿔줌 */
	display: block;
}
a {
	text-decoration: none;
}
.inner {
	width: 1100px;
	margin: 0 auto;
	position: relative;
}

/* HEADER */
header {
	background-color: #f6f5f0;
	border-bottom: 1px solid #c8c8c8;
	/* position: relative; */
	/* 헤더를 고정하려고 사용하는데
	fixed나 absolute의 경우 width를 최소한으로 사용하려고 함 따라서 헤더의 전체 크기가
	줄어드는 문제가 생김 */
	position: fixed;
	top: 0;
	/* 따라서 width를 100%로 해주어야 전체를 사용하게됨 */
	width: 100%;
}
/* header의 자식요소중 inner만 */
header > .inner {
	/* width 설정 후 margin: 0 auto 설정 시 가운대 정렬 */
	/* width: 1100px; */
	height: 120px;
	/* margin: 0 auto; */
	/* position: relative; */
}
header .logo {
	/* height를 명시해줘서 브라우저가 요소를 정확하게 계산할 수 있도록 명시 */
	height: 75px;
	/* 부모요소로 정렬 */
	/* 배치 의미 */
	position: absolute;
	/* 부모요소의 위에서 0 아래에서 0 */
	top: 0;
	bottom: 0;

	/* 부모요소 왼쪽에 붙어있다고 명시적으로 작성해주기 안써줘도 됨 */
	left: 0;

	/* 부모요소를 기준으로 가운대 정렬 */
	/* margin은 브라우저가 외부 여백을 알아서 계산 */
	/* 정렬 원리: 따라서 부모요소에서 브라우저가 계산한 top에서 0, bottom에서 0 지점으로 배치 */
	margin: auto;
	/* margin: 0 auto 로수평정렬을 원할 경우 left와 right를 0으로 해주면 됨 */
	/* margin: auto 는 auto auto줄임 */

	/* display: none; */
}
header .sub-menu{
	position: absolute;
	top: 10px;
	right: 0;
	display: flex;
}
header .sub-menu ul.menu {
	font-family: Arial, sans-serif;
	display: flex;
}
header .sub-menu ul.menu li {
	position: relative;
}
header .sub-menu ul.menu li::before {
	/* content 가 꼭 있어야 before라는 가상요소 만들어짐 */
	/* 가상요소는 기본적으로 inline요소 */
	content: "";
	/* 명시적으로 두어도 되고 없애도 됨 */
	display: block;
	width: 1px;
	height: 12px;
	background-color: #e5e5e5;
	/* position: absolute를 사용하면 요소 성질이 display로 변함 */
	position: absolute;
	top: 0;
	bottom: 0;
	margin: auto;
}
header .sub-menu ul.menu li:first-child::before{
	display: none;
}
header .sub-menu ul.menu li a {
	font-size: 12px;
	padding: 11px 16px;
	/* a태그는 인라인 요소기때문에 블록요소로 바꾸어주어야 padding 적용가능 */
	display: block;
	color: #656565;
	
}
header .sub-menu ul.menu li a:hover {
	color: #000;

}
header .sub-menu .search {
	height: 34px;
	position: relative;
}
header .sub-menu .search input {
	width: 36px;
	height: 34px;
	padding: 4px 10px;
	border: 1px solid #ccc;
	box-sizing: border-box;
	border-radius: 5px;
	outline: none;
	background-color: #fff;
	color: #777;
	font-size: 12px;
	transition: width	.4s;
}
header .sub-menu .search input:focus {
	width: 190px;
	border-color: #669900;
}
header .sub-menu .search .material-icons {
	/* 구글 기본 아이콘 크기가 24px */
	height: 24px;
	position: absolute;
	top: 0;
	bottom: 0;
	right: 5px;
	margin: auto;
	transition: .4s;
}
header .sub-menu .search.focused .material-icons {
	opacity: 0;
}
/* MAIN MENU */
header .main-menu {
	position: absolute;
	bottom: 0;
	right: 0;
	z-index: 1;
	display: flex;
}
header .main-menu .item {

}
header .main-menu .item .item__name {
	padding: 10px 20px 34px 20px;
	font-family: Arial, sans-serif;
	font-size: 13px;
}
header .main-menu .item:hover .item__name {
	background-color: #2c2a29;
	color: #669900;
	border-radius: 6px 6px 0 0;
}
header .main-menu .item .item__contents {
	width: 100%;
	position: fixed;
	/* top이나 bottom 속성을 사용하지 않아 수직 위치 값이 없다면
	요소의 원래 위치를 그대로 사용한다.
	만약 position: absolute;를 사용했다면, 위치상 부모 요소를 기준으로
	하므로 화면의 뷰포트 좌우 끝까지 늘어날 수 없게 된다. */
	left: 0;
	display: none;
}
header .main-menu .item:hover .item__contents {
	display: block;
}
header .main-menu .item .item__contents .contents__menu {
	background-color: #2c2a29;
	/* height는 명시적으로 차지하게 작성한것 없애면 auto로 되어 자식요소 크기만큼 지정됨 */
	/* height: 200px; */
}
/* 자식 요소로 ul이 여러개일 경우 명시적으로 입력해주기 */
header .main-menu .item .item__contents .contents__menu > ul {
	display: flex;
	padding: 20px 0;
}
header .main-menu .item .item__contents .contents__menu > ul > li {
	width: 220px;
}
header .main-menu .item .item__contents .contents__menu > ul > li > h4 {
	padding: 3px 0 12px 0;
	font-size: 14px;
	color: #fff;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li {
	padding: 5px 0;
	font-size: 12px;
	color: #999;
	cursor: pointer;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li:hover {
	color: #669900;
}
header .main-menu .item .item__contents .contents__texture {
	/* background-color: orange;
	height: 100px; */
	padding: 26px 0;
	font-size: 12PX;
	background-image: url("../images/main_menu_pattern.jpg");
}
header .main-menu .item .item__contents .contents__texture h4 {
	color: #999;
	font-weight: 700;
}
header .main-menu .item .item__contents .contents__texture p {
	color: #669900;
	margin: 4px 0 14px;
}
/* BADGES */
header .badges{
	position: absolute;
	top: 132px;
	right: 12px;
}
header .badges .badge {
	border-radius: 10px;
	/* 모서리는 div요소에서 깍지만 그 안에 들어있는 이미지가 화면에 출력되는 상황
	overflow: hidden;을 넣어주어야 넘치는 부분이 깍여서 나옴 */
	overflow: hidden;
	margin-bottom: 12px;
	box-shadow: 4px 4px 10px rgba(0, 0, 0, .15);
	cursor: pointer;
}